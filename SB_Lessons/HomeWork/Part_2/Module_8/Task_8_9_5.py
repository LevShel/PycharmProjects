# Задача 5. Список списков — 2
# Что нужно сделать
# Вы уже работали с многомерными списками и решали задачи, где с помощью
# list comprehensions «выпрямляли» многомерные списки в один. Это не получится,
# если списков неограниченное количество и у элементов разные уровни вложенности.
# Дан такой список:
nice_list = [1, 2, [3, 4], [[5, 6, 7], [8, 9, 10]], [[11, 12, 13], [14, 15], [16, 17, 18]]]


# Напишите рекурсивную функцию, которая раскрывает все вложенные списки,
# то есть оставляет только внешний список.
# Ответ: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]
# Функция должна получать список и возвращать его раскрытую версию
# (не нужно добавлять элементы в список, записанный в глобальную переменную,
# созданную снаружи функции).
# Подсказка
# Можно возвращать списки и срезы списков.

def list_of_lists(*args):
    list_full = []
    for arg in args:
        if isinstance(arg, list):
            list_full.extend(list_of_lists(*arg))
        else:
            list_full.append(arg)
    return list_full


print(list_of_lists(nice_list))

