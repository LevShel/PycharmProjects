# Задание 4. Гистограмма частоты — 2
# Что нужно сделать
# Вы уже писали программу для лингвистов, которая получала на вход текст и считала,
# сколько раз каждый символ встречается в строке. Теперь задание изменилось: максимальную
# частоту выводить не нужно, но необходимо написать функцию, которая будет инвертировать
# полученный словарь. То есть в качестве ключа будет частота, а в качестве значения —
# список символов с этой частотой.
# По итогу нужно реализовать следующие подзадачи:
# 1.	получить текст и создать из него оригинальный словарь частот;
# 2.	создать новый словарь и заполнить его данными из оригинального словаря частот,
# используя количество повторов в качестве ключей, а буквы — в качестве значений,
# добавляя их в список для хранения.
# Пример
# Введите текст: здесь что-то написано
# Оригинальный словарь частот:
# : 2
# - : 1
# З : 1
# а : 2
# д : 1
# е : 1
# и : 1
# н : 2
# о : 3
# п : 1
# с : 2
# т : 2
# ч : 1
# ь : 1
# Инвертированный словарь частот:
# 1 : ['З', 'д', 'е', 'ь', 'ч', '-', 'п', 'и']
# 2 : ['с', ' ', 'т', 'н', 'а']
# 3 : ['о']

str_text = input('>: ')
dict_syms = {}
dict_invert = {}

for sym in str_text:
    dict_syms[sym] = str_text.count(sym)
print('Original frequency list:')
for sym, num in sorted(dict_syms.items()):
    print(f'{sym} = {num}')

for sym, num in dict_syms.items():
    if num in dict_invert:
        dict_invert[num].append(sym)
    else:
        dict_invert[num] = [sym]
print('Inverted frequency dictionary:')
for num, sym in dict_invert.items():
    print(f'{num}: {sym}')
