# Задача 4. RPG-игра
# Что нужно сделать
# Вася решил заняться разработкой компьютерных игр (Python применяется даже в геймдеве!).
# Ему поручили разрабатывать искусственный интеллект для союзников, которые сражаются бок
# о бок с реальными игроками. Но так как Вася пока не силён в теме машинного обучения
# и нейросетей, ему предстоит заменить эти знания смекалкой и набором if/else-условий.
# Вася уже написал код, описывающий монстров (файл monsters.py), этот код изменять нельзя.
# В файле heroes.py вы найдёте заготовки системы классов:
# базовый класс hero, который нельзя изменять;
# наследники класса tank/healer/attacker — их надо изменять.
# Помимо этого, в main.py есть код, который:
# запускает один год сражений — изменять нельзя;
# создаёт команду для сражения с монстрами — изменять можно, но с условиями;
# запускает 20 раз один год сражений и подсчитывает количество побед — изменять нельзя.
# Ваша задача:
# Дописать код в классы tank/healer/attacker в файле heroes.py.
# Сформировать команду в main.py.
# Проверить, что с выбранной вами стратегией герои побеждают монстров как минимум
# в половине случаев (>= 10 побед из 20).
# Цель: из 20 сражений нужно побеждать как минимум в 10. В сражениях много случайностей,
# поэтому убедитесь, что в нескольких разных запусках ваша команда набирает нужное
# количество очков.
# Советы и рекомендации
# Внимательно изучите код поведения монстров. Изменять его нельзя, но изучать не запрещено.
# При помощи команды print выводите информацию о том, кто и что делает каждый день.
# Особое внимание уделите информации, которая идёт в последние дни перед поражением героев.
# На основе полученной информации попробуйте изменять приоритеты действий. Обратите внимание,
# что вы можете не только выбирать действие для выполнения, но также выбрать цель для действия.
# Иногда может быть выгоднее атаковать монстров конкретного класса, чтобы уменьшить урон
# по вашей команде.

#TODO